<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Realtime Group Chat</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
<div class="container mt-5">
    <h1>Realtime Group Chat</h1>

    <hr>

    <h2>Kirim Pesan</h2>
    <form id="sendMessageForm">
        <div class="form-group">
            <label for="groupIdMessage">Group ID:</label>
            <input type="text" class="form-control" id="groupIdMessage" required>
        </div>
        <div class="form-group">
            <label for="senderId">Sender ID:</label>
            <input type="text" class="form-control" id="senderId" required>
        </div>
        <div class="form-group">
            <label for="messageText">Pesan:</label>
            <textarea class="form-control" id="messageText" rows="3" required></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Kirim Pesan</button>
    </form>

    <hr>

    <h2>Pesan dari Grup</h2>
    <div id="messagesContainer"></div>
</div>

<script>
    const API_BASE_URL = 'http://localhost:3001'; // Ganti dengan URL API Anda jika diperlukan

    document.getElementById('createGroupForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const groupId = document.getElementById('groupId').value;
        const groupName = document.getElementById('groupName').value;

        try {
            const response = await fetch(`${API_BASE_URL}/groups`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({groupId, groupName}),
            });
            const data = await response.json();
            // alert(data.message);
        } catch (error) {
            console.error('Error:', error);
            alert('Terjadi kesalahan saat membuat grup.');
        }
    });

    document.getElementById('sendMessageForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const groupId = document.getElementById('groupIdMessage').value;
        const senderId = document.getElementById('senderId').value;
        const text = document.getElementById('messageText').value;

        try {
            const response = await fetch(`${API_BASE_URL}/messages/${groupId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({senderId, text}),
            });
            const data = await response.json();
            document.getElementById('messageText').value = ''; // Bersihkan input pesan
            listenToMessages(groupId); // Memulai pemantauan real-time
        } catch (error) {
            console.error('Error:', error);
            alert('Terjadi kesalahan saat mengirim pesan.');
        }
    });

    // Fungsi untuk memulai mendengarkan pesan secara real-time menggunakan Server-Sent Events (SSE)
    function listenToMessages(groupId) {
        const eventSource = new EventSource(`${API_BASE_URL}/listen/${groupId}`);

        eventSource.onmessage = (event) => {
            const message = JSON.parse(event.data);
            displayNewMessage(message);
        };

        eventSource.onerror = (error) => {
            console.error("EventSource error:", error);
            eventSource.close(); // Menutup koneksi jika terjadi error
        };
    }

    // Fungsi untuk menampilkan pesan baru di halaman
    function displayNewMessage(message) {
        const container = document.getElementById('messagesContainer');
        const div = document.createElement('div');
        div.textContent = `${message.senderId}: ${message.text} (${new Date(message.timestamp).toLocaleString()})`;
        container.appendChild(div);
    }

    // Fungsi untuk mengambil semua pesan sebelumnya dari grup
    async function fetchMessages(groupId) {
        try {
            const response = await fetch(`${API_BASE_URL}/messages/${groupId}`);
            const messages = await response.json();
            displayMessages(messages);
        } catch (error) {
            console.error('Error:', error);
            alert('Terjadi kesalahan saat mengambil pesan.');
        }
    }

    function displayMessages(messages) {
        const container = document.getElementById('messagesContainer');
        container.innerHTML = ''; // Hapus pesan sebelumnya
        messages.forEach(message => {
            const div = document.createElement('div');
            div.textContent = `${message.senderId}: ${message.text} (${new Date(message.timestamp).toLocaleString()})`;
            container.appendChild(div);
        });
    }
</script>
</body>
</html>
